type token =
    SEMICOLON
  | R_PAREN
  | R_BRACE
  | OP_PLUS
  | OP_OR
  | OP_NOT
  | OP_NE
  | OP_MUL
  | OP_MOD
  | OP_MINUS
  | OP_LT
  | OP_LE
  | OP_GT
  | OP_GE
  | OP_EQ
  | OP_DIV
  | OP_ASSIGN
  | OP_AND
  | L_PAREN
  | L_BRACE
  | KW_WHILE
  | KW_VOID
  | KW_RETURN
  | KW_INT
  | KW_IF
  | KW_ELSE
  | KW_CONTINUE
  | KW_BREAK
  | INT_LITERAL of int
  | IDENT of string
  | EOF
  | COMMA
val menhir_begin_marker : int
val xv_statement : Ast.stmt
val xv_separated_nonempty_list_COMMA_func_param_ : Ast.param list
val xv_separated_nonempty_list_COMMA_expression_ : Ast.expr list
val xv_separated_list_COMMA_func_param_ : Ast.param list
val xv_separated_list_COMMA_expression_ : Ast.expr list
val xv_return_type : bool
val xv_preceded_KW_ELSE_statement_ : Ast.stmt
val xv_option_preceded_KW_ELSE_statement__ : Ast.stmt option
val xv_option_expression_ : Ast.expr option
val xv_loption_separated_nonempty_list_COMMA_func_param__ : Ast.param list
val xv_loption_separated_nonempty_list_COMMA_expression__ : Ast.expr list
val xv_list_statement_ : Ast.stmt list
val xv_list_func_decl_ : Ast.function_def list
val xv_func_param : Ast.param
val xv_func_decl : Ast.function_def
val xv_expression : Ast.expr
val xv_compilation_unit : Ast.program
val menhir_end_marker : int
