
** Conflict (shift/reduce) in state 81.
** Token involved: KW_ELSE
** This state is reached from compilation_unit after reading:

return_type IDENT L_PAREN loption(separated_nonempty_list(COMMA,func_param)) R_PAREN L_BRACE KW_IF L_PAREN expression R_PAREN KW_IF L_PAREN expression R_PAREN statement

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

compilation_unit 
list(func_decl) EOF 
func_decl list(func_decl) 
return_type IDENT L_PAREN loption(separated_nonempty_list(COMMA,func_param)) R_PAREN L_BRACE list(statement) R_BRACE 
                                                                                             statement list(statement) 
                                                                                             (?)

** In state 81, looking ahead at KW_ELSE, reducing production
** option(preceded(KW_ELSE,statement)) ->
** is permitted because of the following sub-derivation:

KW_IF L_PAREN expression R_PAREN statement option(preceded(KW_ELSE,statement)) // lookahead token appears because option(preceded(KW_ELSE,statement)) can begin with KW_ELSE
                                 KW_IF L_PAREN expression R_PAREN statement option(preceded(KW_ELSE,statement)) // lookahead token is inherited
                                                                            . 

** In state 81, looking ahead at KW_ELSE, shifting is permitted
** because of the following sub-derivation:

KW_IF L_PAREN expression R_PAREN statement option(preceded(KW_ELSE,statement)) 
                                 KW_IF L_PAREN expression R_PAREN statement option(preceded(KW_ELSE,statement)) 
                                                                            . KW_ELSE statement 
